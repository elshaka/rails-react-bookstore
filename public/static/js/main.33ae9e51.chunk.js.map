{"version":3,"sources":["reducers/books.js","reducers/filter.js","reducers/loading.js","reducers/index.js","components/Book.js","actions/index.js","containers/BookList.js","containers/BookForm.js","containers/CategoryFilter.js","components/App.js","index.js"],"names":["booksReducer","books","action","type","book","filter","id","filterReducer","state","loadingReducer","loading","rootReducer","combineReducers","Book","remove","title","category","onClick","setLoading","connect","dispatch","getBooks","axios","get","then","response","data","destroyBook","delete","removeBook","useEffect","filteredBooks","className","length","map","key","categories","mapDispatchToProps","newBook","post","createBook","defaultBook","React","useState","setBook","handleChange","event","target","name","value","htmlFor","required","onChange","preventDefault","ID","Math","floor","random","changeFilter","newFilter","App","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33ae9e51.chunk.js","sourcesContent":["const booksReducer = (books = [], action) => {\n  switch (action.type) {\n    case 'SET_BOOKS':\n      return action.books;\n    case 'CREATE_BOOK':\n      return [...books, action.book];\n    case 'REMOVE_BOOK':\n      return books.filter(book => book.id !== action.book.id);\n    default:\n      return books;\n  }\n};\n\nexport default booksReducer;\n","const filterReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'CHANGE_FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","const loadingReducer = (loading = false, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return action.loading;\n    default:\n      return loading;\n  }\n};\n\nexport default loadingReducer;\n","import { combineReducers } from 'redux';\nimport booksReducer from './books';\nimport filterReducer from './filter';\nimport loadingReducer from './loading';\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, remove }) => (\n  <tr>\n    <td>{book.title}</td>\n    <td>{book.category}</td>\n    <td><button type=\"button\" onClick={() => remove(book)}>Remove</button></td>\n  </tr>\n);\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    ID: PropTypes.string,\n    title: PropTypes.string,\n    category: PropTypes.string,\n  }).isRequired,\n  remove: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","import axios from 'axios';\n\nconst setBooks = books => ({ type: 'SET_BOOKS', books });\nconst createBook = book => ({ type: 'CREATE_BOOK', book });\nconst removeBook = book => ({ type: 'REMOVE_BOOK', book });\nconst changeFilter = filter => ({ type: 'CHANGE_FILTER', filter });\nconst setLoading = loading => ({ type: 'SET_LOADING', loading });\n\nconst getBooks = () => dispatch => {\n  dispatch(setLoading(true));\n  axios\n    .get('/books.json')\n    .then(response => {\n      dispatch(setBooks(response.data));\n      dispatch(setLoading(false));\n    });\n};\n\nconst newBook = book => dispatch => {\n  axios\n    .post('/books.json', { book })\n    .then(response => {\n      dispatch(createBook(response.data));\n    });\n};\n\nconst destroyBook = book => dispatch => {\n  axios\n    .delete(`/books/${book.id}.json`)\n    .then(() => {\n      dispatch(removeBook(book));\n    });\n};\n\nexport {\n  getBooks, newBook, createBook, destroyBook, changeFilter,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { getBooks, destroyBook } from '../actions';\n\nconst BookList = ({\n  books, filter, loading, getBooks, destroyBook,\n}) => {\n  useEffect(() => {\n    getBooks();\n  }, [getBooks]);\n\n  const filteredBooks = filter ? books.filter(book => book.category === filter) : books;\n\n  return (\n    <div className=\"BookList\">\n      { loading && <span>Loading...</span> }\n      { filteredBooks.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Category</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredBooks.map(book => <Book key={book.id} book={book} remove={destroyBook} />)}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(Book.propTypes.book).isRequired,\n  filter: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  getBooks: PropTypes.func.isRequired,\n  destroyBook: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n  loading: state.loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getBooks: () => dispatch(getBooks()),\n  destroyBook: book => dispatch(destroyBook(book)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { newBook } from '../actions';\n\nexport const categories = [\n  'Action',\n  'Biography',\n  'History',\n  'Horror',\n  'Kids',\n  'Learning',\n  'Sci-Fi',\n];\n\nconst BookForm = ({ newBook }) => {\n  const defaultBook = { title: '', category: 'Action' };\n  const [book, setBook] = React.useState(defaultBook);\n\n  const handleChange = event => {\n    setBook({\n      ...book,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    newBook({\n      ID: Math.floor((Math.random() * 1000) + 1),\n      ...book,\n    });\n\n    setBook(defaultBook);\n  };\n\n  return (\n    <div className=\"BookForm\">\n      <form>\n        <label htmlFor=\"title\">\n          Title\n          <input required type=\"text\" id=\"title\" name=\"title\" value={book.title} onChange={handleChange} />\n        </label>\n        <label htmlFor=\"category\">\n          Category\n          <select required id=\"category\" name=\"category\" value={book.category} onChange={handleChange}>\n            { categories.map(category => (\n              <option key={category} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n        </label>\n        <input type=\"submit\" onClick={handleSubmit} />\n      </form>\n    </div>\n  );\n};\n\nBookForm.propTypes = {\n  newBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = { newBook };\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { categories } from './BookForm';\nimport { changeFilter } from '../actions';\n\nconst CategoryFilter = ({ filter, changeFilter }) => {\n  const changeFilterHandler = event => {\n    const newFilter = event.target.value;\n    if (newFilter === 'All') {\n      changeFilter('');\n    } else {\n      changeFilter(newFilter);\n    }\n  };\n\n  return (\n    <div className=\"CategoryFilter\">\n      <label htmlFor=\"category\">\n        Filter by category\n        <select id=\"category\" value={filter} onChange={changeFilterHandler}>\n          { ['All', ...categories].map(category => (\n            <option key={category} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n      </label>\n    </div>\n  );\n};\n\nCategoryFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: filter => dispatch(changeFilter(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryFilter);\n","import React from 'react';\nimport BookList from '../containers/BookList';\nimport BookForm from '../containers/BookForm';\nimport CategoryFilter from '../containers/CategoryFilter';\n\nconst App = () => (\n  <div className=\"BookStore\">\n    <BookForm />\n    <CategoryFilter />\n    <BookList />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './stylesheets/index.css';\nimport rootReducer from './reducers/index';\nimport App from './components/App';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}